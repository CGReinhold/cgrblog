{"version":3,"sources":["input.tsx","color.tsx","switch.tsx","face-generator.tsx","index.tsx"],"names":["Input","id","title","placeholder","type","value","onChange","maxValue","minValue","className","e","currentTarget","max","min","ColorPicker","colors","color","hex","Switch","htmlFor","checked","randomNumber","Math","floor","random","randomColor","toString","randomItem","list","length","EYE_COLORS","FACE_COLORS","getEyeColor","console","log","getFaceColor","Face","useState","setColor","width","setWidth","height","setHeight","pointiness","setPointiness","eyeColor","setEyeColor","eyeHorizontalMargin","setEyeHorizontalMargin","eyeVerticalMargin","setEyeVerticalMargin","mouthWidth","setMouthWidth","noseWidth","setNoseWidth","noseHeight","setNoseHeight","hairColor","setHairColor","hairLength","setHairLength","hairType","setHairType","resolution","setResolution","pixelFace","PixelFace","eye","horizontalMargin","verticalMargin","face","hair","style","mouth","nose","dangerouslySetInnerHTML","__html","getSVG","onClick","svg","document","querySelector","source","XMLSerializer","serializeToString","match","replace","url","encodeURIComponent","downloadLink","createElement","href","download","body","appendChild","click","removeChild","newColor","Number","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e7da12c9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface InputProps {\r\n  id: string;\r\n  title?: string;\r\n  placeholder?: string;\r\n  type?: 'number' | 'text';\r\n  value: string | number;\r\n  maxValue?: number;\r\n  minValue?: number;\r\n  onChange(value: string): void;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ id, title, placeholder, type = 'text', value, onChange, maxValue, minValue }) => {\r\n  const onChangeHandler = (e: React.FormEvent<HTMLInputElement>) => {\r\n    onChange(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <label id={id} className=\"text-xs font-semibold px-1\">{title}</label>\r\n      <div className=\"flex\">\r\n        <input\r\n          type={type}\r\n          value={value}\r\n          className=\"w-full pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\"\r\n          placeholder={placeholder}\r\n          onChange={onChangeHandler}\r\n          max={maxValue}\r\n          min={minValue}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport { CirclePicker, SliderPicker } from 'react-color';\r\n\r\ninterface ColorProps {\r\n  id: string;\r\n  title: string;\r\n  colors?: string[];\r\n  color: string;\r\n  onChange(value: string): void;\r\n}\r\n\r\nconst ColorPicker: React.FC<ColorProps> = ({ id, title, colors, color, onChange }) => {\r\n  return (\r\n    <div>\r\n      <label id={id} className=\"text-xs font-semibold px-1\">{title}</label>\r\n      {!colors ? (\r\n        <SliderPicker color={color} onChange={color => onChange(color.hex)} />\r\n      ) : (\r\n        <CirclePicker colors={colors} color={color} onChange={color => onChange(color.hex)}  />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;","import React from 'react';\r\n\r\ninterface SwitchProps {\r\n  title: string;\r\n  value: boolean;\r\n  onChange(value: boolean): void;\r\n}\r\n\r\nconst Switch: React.FC<SwitchProps> = ({ title, value, onChange }) => {\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <label id=\"switch-label\" className=\"text-xs font-semibold px-1\">{title}</label>\r\n      <div className=\"flex items-center justify-center w-full mb-6 mt-3\">\r\n        <label \r\n          htmlFor=\"toogle\"\r\n          className=\"flex items-center cursor-pointer\"\r\n        >\r\n          <div id=\"down\" className=\"mr-3 text-gray-700 px-1\">\r\n            Pra baixo!\r\n          </div>\r\n          <div className=\"relative\">\r\n            <input id=\"toogle\" type=\"checkbox\" checked={value} onChange={() => onChange(!value)} className=\"hidden\" />\r\n            <div className=\"toggle__line w-10 h-4 bg-gray-400 rounded-full shadow-inner\"></div>\r\n            <div className=\"toggle__dot absolute w-6 h-6 bg-white rounded-full shadow inset-y-0 left-0\"></div>\r\n          </div>\r\n          <div id=\"up\" className=\"ml-3 text-gray-700 px-1\">\r\n            Pra cima!\r\n          </div>\r\n        </label>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Switch;","import React, { useState } from 'react';\r\nimport PixelFace from 'pixel-face';\r\nimport Input from './input';\r\nimport ColorPicker from './color';\r\nimport Switch from './switch';\r\n\r\nfunction randomNumber(min: number = 0, max: number = 10) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction randomColor() {\r\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\nfunction randomItem(list: any[]) {\r\n  const index = randomNumber(0, list.length - 1);\r\n  return list[index];\r\n}\r\n\r\nconst EYE_COLORS = ['#000000', '#5c3836', '#ad6452', '#00aa00', '#0000aa', '#aaaaaa'];\r\n\r\nconst FACE_COLORS = ['#000000', '#5c3836', '#704139', '#ad6452', '#ffe0bd', '#e3cc88', '#fff5e1', '#a01900'];\r\n\r\nfunction getEyeColor(color: '#000000'|'#5c3836'|'#ad6452'|'#00aa00'|'#0000aa'|'#aaaaaa') {\r\n  console.log(color)\r\n  switch (color) {\r\n    case '#000000':\r\n      return 'black';\r\n    case '#0000aa':\r\n      return 'blue';\r\n    case '#5c3836':\r\n      return 'dark-brown';\r\n    case '#aaaaaa':\r\n      return 'gray';\r\n    case '#00aa00':\r\n      return 'green';\r\n    case '#ad6452':\r\n      return 'light-brown';\r\n  }\r\n}\r\n\r\nfunction getFaceColor(color: '#000000'|'#5c3836'|'#704139'|'#ad6452'|'#ffe0bd'|'#e3cc88'|'#fff5e1'|'#a01900') {\r\n  switch (color) {\r\n    case '#000000':\r\n      return 'black';\r\n    case '#5c3836':\r\n      return 'dark-brown';\r\n    case '#704139':\r\n      return 'brown';\r\n    case '#ad6452':\r\n      return 'light-brown';\r\n    case '#a01900':\r\n      return 'red';\r\n    case '#ffe0bd':\r\n      return 'salmon';\r\n    case '#fff5e1':\r\n      return 'white';\r\n    case '#e3cc88':\r\n      return 'yellow';\r\n  }\r\n}\r\n\r\nconst Face: React.FC = () => {\r\n  const [color, setColor] = useState(randomItem(FACE_COLORS));\r\n  const [width, setWidth] = useState(randomNumber(5, 15));\r\n  const [height, setHeight] = useState(randomNumber(5, 15));\r\n  const [pointiness, setPointiness] = useState(randomNumber(0, 30));\r\n  const [eyeColor, setEyeColor] = useState(randomItem(EYE_COLORS));\r\n  const [eyeHorizontalMargin, setEyeHorizontalMargin] = useState(randomNumber(-1, 2));\r\n  const [eyeVerticalMargin, setEyeVerticalMargin] = useState(randomNumber(-2, 2));\r\n  const [mouthWidth, setMouthWidth] = useState(randomNumber(1, 5));\r\n  const [noseWidth, setNoseWidth] = useState(randomNumber(0, 3));\r\n  const [noseHeight, setNoseHeight] = useState(randomNumber(0, 5));\r\n  const [hairColor, setHairColor] = useState(randomColor());\r\n  const [hairLength, setHairLength] = useState(randomNumber(0, 15));\r\n  const [hairType, setHairType] = useState(randomNumber(0, 1) === 0);\r\n  const [resolution, setResolution] = useState(1);\r\n\r\n  const pixelFace = new PixelFace({\r\n    eye: { color: getEyeColor(eyeColor), horizontalMargin: eyeHorizontalMargin, verticalMargin: eyeVerticalMargin },\r\n    face: { color: getFaceColor(color), height, width, pointiness },\r\n    hair: { color: hairColor, length: hairLength, style: hairType ? 'top' : 'bottom' },\r\n    mouth: { width: mouthWidth },\r\n    nose: { height: noseHeight, width: noseWidth },\r\n    resolution,\r\n  });\r\n\r\n  const onRandomClick = () => {\r\n    setColor(randomItem(FACE_COLORS));\r\n    setWidth(randomNumber(5, 15));\r\n    setHeight(randomNumber(5, 15));\r\n    setPointiness(randomNumber(0, 30));\r\n    setEyeColor(randomItem(EYE_COLORS));\r\n    setEyeHorizontalMargin(randomNumber(-1, 2));\r\n    setEyeVerticalMargin(randomNumber(-2, 2));\r\n    setMouthWidth(randomNumber(1, 5));\r\n    setNoseWidth(randomNumber(0, 3));\r\n    setNoseHeight(randomNumber(0, 5));\r\n    setHairLength(randomNumber(0, 15));\r\n    setHairColor(randomColor());\r\n    setHairType(randomNumber(0, 1) === 0);\r\n    setResolution(10);\r\n  };\r\n\r\n  const onSave = () => {\r\n    const svg = document.querySelector('svg');\r\n    if (svg) {\r\n      const serializer = new XMLSerializer();\r\n      let source = serializer.serializeToString(svg);\r\n      \r\n      if(!source.match(/^<svg[^>]+xmlns=\"http\\:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\r\n        source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\r\n      }\r\n      source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\r\n      const url = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\r\n      \r\n      const downloadLink = document.createElement(\"a\");\r\n      downloadLink.href = url;\r\n      downloadLink.download = \"face.svg\";\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center\">\r\n      <div className=\"m-6 w-72 h-72 flex flex-col justify-center items-center\" dangerouslySetInnerHTML={{ __html: pixelFace.getSVG() || '' }}></div>\r\n      <button\r\n        id=\"random\"\r\n        className=\"p-2 my-2 bg-blue-500 text-white rounded-md focus:outline-none focus:ring-2 ring-blue-300 ring-offset-2\"\r\n        onClick={onRandomClick}\r\n        >\r\n        Aleatório!\r\n      </button>\r\n      <button\r\n        id=\"save\"\r\n        className=\"p-2 my-2 bg-transparent border border-blue-500 text-blue-500 rounded-md focus:outline-none focus:ring-2 ring-blue-300 ring-offset-2\"\r\n        onClick={onSave}\r\n        >\r\n        Salvar!\r\n      </button>\r\n      <div className=\"flex flex-wrap\">\r\n        <div className=\"p-8\">\r\n          <ColorPicker id=\"face-color\" title=\"Rosto\" colors={FACE_COLORS} color={color} onChange={newColor => setColor(newColor)} />\r\n          <Input\r\n            id=\"face-width\"\r\n            title=\"Largura do rosto\"\r\n            type=\"number\"\r\n            value={width}\r\n            onChange={(value) => setWidth(Number(value))}\r\n            maxValue={15}\r\n            minValue={5}\r\n            />\r\n          <Input\r\n            id=\"face-height\"\r\n            title=\"Altura do rosto\"\r\n            type=\"number\"\r\n            value={height}\r\n            onChange={(value) => setHeight(Number(value))}\r\n            maxValue={15}\r\n            minValue={5}\r\n            />\r\n          <Input\r\n            id=\"face-pointiness\"\r\n            title=\"Finura do rosto\"\r\n            type=\"number\"\r\n            value={pointiness}\r\n            onChange={(value) => setPointiness(Number(value))}\r\n            maxValue={30}\r\n            minValue={0}\r\n          />\r\n          <Input\r\n            id=\"resolution\"\r\n            title=\"Resolução\"\r\n            type=\"number\"\r\n            value={resolution}\r\n            onChange={(value) => setResolution(Number(value))}\r\n            maxValue={10}\r\n            minValue={1}\r\n          />\r\n        </div>\r\n        <div className=\"p-8\">\r\n          <ColorPicker id=\"hair-color\" title=\"Cor do cabelo\" color={hairColor} onChange={newColor => setHairColor(newColor)} />\r\n          <Input\r\n            id=\"hair-length\"\r\n            title=\"Comprimento do cabelo\"\r\n            type=\"number\"\r\n            value={hairLength}\r\n            onChange={(value) => setHairLength(Number(value))}\r\n            maxValue={15}\r\n            minValue={0}\r\n          />\r\n          <Switch\r\n            title=\"Tipo do cabelo\"\r\n            value={hairType}\r\n            onChange={(value) => setHairType(value)}\r\n          />\r\n          <Input\r\n            id=\"mouth-length\"\r\n            title=\"Largura da boca\"\r\n            type=\"number\"\r\n            value={mouthWidth}\r\n            onChange={(value) => setMouthWidth(Number(value))}\r\n            maxValue={5}\r\n            minValue={1}\r\n          />\r\n        </div>\r\n        <div className=\"p-8\">\r\n          <ColorPicker id=\"eye-color\" title=\"Cor dos olhos\" colors={EYE_COLORS} color={eyeColor} onChange={newColor => setEyeColor(newColor)} />\r\n          <Input\r\n            id=\"eyes-horizontal\"\r\n            title=\"Margem horizontal dos olhos\"\r\n            type=\"number\"\r\n            value={eyeHorizontalMargin}\r\n            onChange={(value) => setEyeHorizontalMargin(Number(value))}\r\n            maxValue={2}\r\n            minValue={-1}\r\n          />\r\n          <Input\r\n            id=\"eyes-vertical\"\r\n            title=\"Margem vertical dos olhos\"\r\n            type=\"number\"\r\n            value={eyeVerticalMargin}\r\n            onChange={(value) => setEyeVerticalMargin(Number(value))}\r\n            maxValue={2}\r\n            minValue={-2}\r\n          />\r\n          <Input\r\n            id=\"nose-width\"\r\n            title=\"Largura do nariz\"\r\n            type=\"number\"\r\n            value={noseWidth}\r\n            onChange={(value) => setNoseWidth(Number(value))}\r\n            maxValue={4}\r\n            minValue={1}\r\n          />\r\n          <Input\r\n            id=\"nose-height\"\r\n            title=\"Altura do nariz\"\r\n            type=\"number\"\r\n            value={noseHeight}\r\n            onChange={(value) => setNoseHeight(Number(value))}\r\n            maxValue={4}\r\n            minValue={1}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Face;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Face from './face-generator';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Face />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}